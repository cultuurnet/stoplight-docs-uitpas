{
  "openapi": "3.0.0",
  "info": {
    "title": "UiTPAS API Reference",
    "version": "2.0",
    "contact": {
      "name": "publiq helpdesk",
      "email": "vragen@publiq.be"
    },
    "description": "With UiTPAS API 2.0 you can retrieve ticket sale prices for specific UiTPAS numbers, and register ticket sales for specific UiTPAS numbers.\n\nFuture versions will also include support for more features like saving points and exchanging them for benefits."
  },
  "servers": [
    {
      "url": "https://api-test.uitpas.be",
      "description": "Testing"
    },
    {
      "url": "https://api.uitpas.be",
      "description": "Production"
    }
  ],
  "tags": [
    {
      "name": "TicketSale",
      "description": "Operations related to ticket sales"
    },
    {
      "name": "Organizers",
      "description": "Operations related to organizers"
    },
    {
      "name": "Passholders",
      "description": "Operations related to passholders"
    },
    {
      "name": "Financial",
      "description": "Operations related to financial reports"
    }
  ],
  "paths": {
    "/tariffs": {
      "parameters": [],
      "get": {
        "summary": "Get tariffs",
        "tags": [
          "TicketSale"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tariff"
                  }
                },
                "examples": {
                  "Single tariff example": {
                    "value": [
                      {
                        "id": "STRUCTURALDISCOUNT",
                        "name": "Kansentarief",
                        "price": 1.5
                      }
                    ]
                  },
                  "Multiple tariffs example": {
                    "value": [
                      {
                        "id": "STRUCTURALDISCOUNT",
                        "name": "Kansentarief",
                        "price": 1.5
                      },
                      {
                        "id": "COUPON1234",
                        "name": "Cultuurbon 6 euro",
                        "price": 4
                      },
                      {
                        "id": "COUPON2345",
                        "name": "2 euro korting op een specifiek event",
                        "price": 8
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. The response will include a JSON body with more details in the form of a RFC7807 error model. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/event-not-found\n* https://api.publiq.be/probs/uitpas/invalid-uitpasnumber\n* https://api.publiq.be/probs/uitpas/passholder-not-found\n\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Event not found": {
                    "value": {
                      "type": "https://api.publiq.be/probs/uitpas/event-not-found",
                      "title": "Event id 267B6FCF-46F8-4DA2-8D7D-AADCD2C2715E not found",
                      "status": 400
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "operationId": "get-tariffs",
        "description": "Returns the possible UiTPAS discounted **tariffs for an event and a passholder**.\n\nThis UiTPAS tariffs are calculated based on:\n\n- **The regular price** of the ticket.\nThis is the price your user would have to pay for the specific ticket without UiTPAS discount.\n- **The UiTPAS number** of the passholder. UiTPAS discounts are personal so it's important to identify the passholder to retrieve a list of possible tariffs.\n- **The event id** of the UiTdatabank event. UiTPAS discounts are limited to specific UiTdatabank events, so it's important to specify the event id to retrieve a list of possible tariffs.\n\n> ##### Important\n> The regular price of the ticket should generally be one of the price categories set on the event in UiTdatabank to make financial reporting clearer.\n",
        "security": [
          {
            "Client Access Token (see Authentication docs)": []
          },
          {
            "User Acces Token (see Authentication docs)": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "regularPrice",
            "description": "The regular price the passholder would have to pay for the ticket if they are not eligible for discounts",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "eventId",
            "description": "The id of the event for which the ticket is sold",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "uitpasNumber",
            "description": "UiTPAS Number identifying the passholder who wants to buy a ticket",
            "required": true
          }
        ]
      }
    },
    "/ticket-sales": {
      "parameters": [],
      "post": {
        "summary": "Register ticket sale(s)",
        "tags": [
          "TicketSale"
        ],
        "operationId": "post-ticket-sales",
        "responses": {
          "200": {
            "description": "Ticket sale registration(s) succeeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketSaleRegistration"
                  }
                },
                "examples": {
                  "Single ticketsale example": {
                    "value": [
                      {
                        "id": 21345,
                        "tariff": {
                          "id": "COUPON1234",
                          "name": "Cultuurbon 6 euro",
                          "price": 1.5
                        },
                        "uitpasNumber": "0560002524314",
                        "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002"
                      }
                    ]
                  },
                  "Multiple ticket sales example": {
                    "value": [
                      {
                        "id": 21345,
                        "tariff": {
                          "id": "COUPON1234",
                          "name": "Cultuurbon 6 euro",
                          "price": 4
                        },
                        "uitpasNumber": "0560002524314",
                        "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002"
                      },
                      {
                        "id": 21346,
                        "tariff": {
                          "id": "STRUCTURALDISCOUNT",
                          "name": "Kansentarief",
                          "price": 1.5
                        },
                        "uitpasNumber": "0940002524123",
                        "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possbile error types:\n\n* https://api.publiq.be/probs/uitpas/structural-discount-expired\n* https://api.publiq.be/probs/uitpas/maximum-reached\n\nThe type indicates the error on one of the failed ticket sale registrations. All other ticket sale registration in the request will be rolled back in case of an error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Structural discount expired": {
                    "value": {
                      "type": "https://api.publiq.be/probs/uitpas/structural-discount-expired",
                      "title": "Structural discount expired",
                      "status": 400
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "description": "Registers one or more new ticket sales **with a discounted UiTPAS tariff**, so the UiTPAS organizer can get reimbursed for the discount.\n\nBefore you can register a discounted ticket sale, you will need to request the possible discounted tariffs from the `GET /tariffs` endpoint and let your end user pick one of the available tariffs. Afterward, you can register a ticket sale using this endpoint. \n\nYou will need:\n\n- The `uitpasNumber` of the passholder buying the ticket.\n- The `eventId` of the UitDatabank event.\n- The chosen `uitpasTariffId` from the `GET /tariffs` request.\n- The `regularPrice` the passholder would normally have to pay for this ticket\n\nOptionally you can include a `regularPriceLabel` describing the regular price if you have multiple price categories, which can be useful in the financial reporting overview.\n\n> ##### Important\n> **If one of the ticket sales is invalid** (for example the chosen tariff is incorrect or expired), **none of the ticket sales will be registered**. You will instead get an error response with more details about the problem, and can then retry the registration without the incorrect ticket sales or ask the end user to change the tickets and tariffs they want.",
        "security": [
          {
            "Client Access Token (see Authentication docs)": []
          },
          {
            "User Acces Token (see Authentication docs)": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TicketSaleRequest"
                }
              },
              "examples": {
                "Example for one ticketsale": {
                  "value": [
                    {
                      "uitpasNumber": "0560002524314",
                      "tariffId": "COUPON1234",
                      "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                      "regularPrice": 10,
                      "regularPriceLabel": "Optional descriptive label of the regular price. Used in financial reporting."
                    }
                  ]
                },
                "Example for multiple ticketsales": {
                  "value": [
                    {
                      "uitpasNumber": "0560002524314",
                      "tariffId": "COUPON1234",
                      "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                      "regularPrice": 10,
                      "regularPriceLabel": "Base tariff"
                    },
                    {
                      "uitpasNumber": "0930002523422",
                      "tariffId": "STRUCTURALDISCOUNT",
                      "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                      "regularPrice": 10,
                      "regularPriceLabel": "Base tariff"
                    }
                  ]
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/ticket-sales/{ticketSaleId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "ticketSaleId",
          "in": "path",
          "required": true,
          "description": "Id of the previously registered ticket sale"
        }
      ],
      "delete": {
        "summary": "Cancel a ticket sale registration",
        "operationId": "delete-ticket-sales",
        "responses": {
          "204": {
            "description": "No content. The ticket sale was successfully canceled."
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Ticket Sale not found": {
                    "value": {
                      "type": "https://api.publiq.be/probs/uitpas/ticket-sale-not-found",
                      "title": "Ticket sale not found",
                      "status": 404
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Cancels a single ticket sale registration by its id. (Returned in the response of the ticket sale registration request.)",
        "tags": [
          "TicketSale"
        ],
        "security": [
          {
            "Client Access Token (see Authentication docs)": []
          },
          {
            "User Acces Token (see Authentication docs)": []
          }
        ]
      }
    },
    "/user/organizer-roles": {
      "get": {
        "summary": "Get organizer roles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizerRole"
                  }
                },
                "examples": {
                  "Example with multiple roles": {
                    "value": [
                      {
                        "type": "member",
                        "organizer": {
                          "id": "c097fa2e-d9be-42e6-b41a-ec3d4d4cbad1",
                          "name": "CC De Werf"
                        }
                      },
                      {
                        "type": "admin",
                        "organizer": {
                          "id": "fd7e6177-4add-4fa8-a7fe-6e60127bfb35",
                          "name": "CC De Schakel"
                        }
                      }
                    ]
                  },
                  "Example with one role": {
                    "value": [
                      {
                        "type": "admin",
                        "organizer": {
                          "id": "c097fa2e-d9be-42e6-b41a-ec3d4d4cbad1",
                          "name": "CC De Werf"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "operationId": "get-user-organizer-roles",
        "description": "List of roles that the current user has in relation to organizers. For example a user can be a `member` or an `admin` of an organizer.",
        "security": [
          {
            "User Acces Token (see Authentication docs)": []
          }
        ],
        "tags": [
          "Current user"
        ]
      },
      "parameters": []
    },
    "/organizers/{organizerId}/distribution-keys": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "organizerId",
          "in": "path",
          "required": true,
          "description": "The id of the organizer"
        }
      ],
      "get": {
        "summary": "Get organizer distribution keys",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DistributionKey"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "get-organizer-distribution-keys",
        "security": [
          {
            "User Acces Token (see Authentication docs)": []
          }
        ],
        "description": "Get manual distribution keys for an organizer, so it can be set to a specific event using [TODO](#todo)\n\n<!-- theme: warning -->\n\n> **This endpoint is only needed for exceptional cases.** In most cases distribution keys are set automatically on events, so you don't need to retrieve the possible distribution keys for the event's organizer.",
        "tags": [
          "DistributionKeys"
        ]
      }
    },
    "/events/{eventId}/distribution-keys": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "eventId",
          "in": "path",
          "required": true,
          "description": "The id of the event"
        }
      ],
      "put": {
        "summary": "Update event distribution keys",
        "operationId": "put-events-distribution-keys",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "List of distribution key ids to enable for the event.",
                "items": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "description": "Update the distribution keys of the given event",
        "security": [
          {
            "User Acces Token (see Authentication docs)": []
          }
        ],
        "tags": [
          "DistributionKeys"
        ]
      },
      "get": {
        "summary": "Get event distribution keys",
        "operationId": "get-events-distribution-keys",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DistributionKey"
                  }
                }
              }
            }
          }
        },
        "description": "Get the distribution keys of the given event",
        "security": [
          {
            "User Acces Token (see Authentication docs)": []
          }
        ],
        "tags": [
          "DistributionKeys"
        ]
      }
    },
    "/organizers": {
      "get": {
        "summary": "Get organizers",
        "tags": [
          "Organizers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse"
                },
                "examples": {}
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "operationId": "get-organizers",
        "description": "Retrieve organizers based on search parameters.",
        "security": [
          {
            "User Acces Token (see Authentication docs)": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "groupId",
            "description": "Include only organizers in this group"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Include only organizers with this name (* wildcard allowed)"
          }
        ]
      }
    },
    "/passholders": {
      "get": {
        "summary": "Search passholders",
        "tags": [
          "Passholders"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "get-passholders",
        "description": "Retrieve passholders based on search parameters",
        "security": [
          {
            "User Acces Token (see Authentication docs)": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "inszNumber"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "uitpasNumber"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "firstName"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "schoolId"
          }
        ]
      }
    },
    "/passholders/{passholderId}": {
      "put": {
        "summary": "Update passholder",
        "operationId": "put-passholders",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Passholder"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "description": "Update the passholder.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PassholderUpdateRequest"
              }
            }
          },
          "description": "The PassholdUpdateRequest object including the fields to be updated."
        },
        "tags": [
          "Passholders"
        ],
        "security": [
          {
            "User Acces Token (see Authentication docs)": []
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "passholderId",
          "in": "path",
          "required": true,
          "description": "The id of the passholder"
        }
      ]
    },
    "/financials/organizers/{organizerId}/periods": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "organizerId",
          "in": "path",
          "required": true,
          "description": "The id of the organizer"
        }
      ],
      "get": {
        "summary": "Get financial report periods for an organizer",
        "tags": [
          "Financial"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportPeriod"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "operationId": "get-financials-organizer-periods",
        "security": [
          {
            "User Acces Token (see Authentication docs)": []
          }
        ],
        "description": "Retrieve report periods for an organizer"
      }
    },
    "/financials/organizers/{organizerId}/reports": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "organizerId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Start a financial report export for an organizer",
        "operationId": "post-financials-organizers-reports",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportStatus"
                },
                "examples": {
                  "Example of started export": {
                    "value": {
                      "status": "started",
                      "reportId": "232432"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "tags": [
          "Financial"
        ],
        "description": "Starts a financial report export. The result of this request is a `reportId` that can be used in the /status and /download requests."
      }
    },
    "/financials/organizers/{organizerId}/report/{reportId}/status": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "organizerId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "reportId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get financial report status",
        "tags": [
          "Financial"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportStatus"
                },
                "examples": {
                  "Example of a started report": {
                    "value": {
                      "reportId": "232432",
                      "status": "started"
                    }
                  },
                  "Example of an available report": {
                    "value": {
                      "reportId": "2332431",
                      "status": "available"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "get-financials-organizers-reports-status",
        "description": "Retrieve the status of a previously started report export."
      }
    },
    "/financials/organizers/{organizerId}/reports/{reportId}/download": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "organizerId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "reportId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get financial report data",
        "tags": [
          "Financial"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-financials-organizers-reports-download",
        "description": "Retrieve the actual report zip file of an `available` report."
      }
    }
  },
  "components": {
    "schemas": {
      "Tariff": {
        "title": "Tariff",
        "type": "object",
        "description": "The Tariff describes the discounted price a passholder has to pay for a given ticket. ",
        "x-internal": false,
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "name",
          "price"
        ],
        "x-tags": [
          "Model"
        ]
      },
      "TicketSaleRegistration": {
        "title": "TicketSaleRegistration",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "tariff": {
            "$ref": "#/components/schemas/Tariff"
          },
          "uitpasNumber": {
            "type": "string"
          },
          "eventId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "tariff",
          "uitpasNumber",
          "eventId"
        ],
        "x-examples": {
          "Example": {
            "id": 21345,
            "tariff": {
              "id": "COUPON1234",
              "name": "Cultuurbon 6 euro",
              "price": 1.5
            },
            "uitpasNumber": "0560002524314",
            "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002"
          }
        },
        "description": "The TicketSaleRegistration is a response object of the POST /ticketSales request. It can be used to provide the user with an overview or to identify the ticket sales in case they need to be canceled.",
        "x-internal": false,
        "x-tags": [
          "Model"
        ]
      },
      "TicketSaleRequest": {
        "title": "TicketSaleRequest",
        "type": "object",
        "description": "The TicketSaleRequest is a request object used to register ticket sales in POST /ticketSales.",
        "x-examples": {
          "Example ticket sale request": {
            "uitpasNumber": "0560002524314",
            "tariffId": "COUPON1234",
            "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
            "regularPrice": 10,
            "regularPriceLabel": "Optional descriptive label of the regular price. Used in financial reporting."
          }
        },
        "properties": {
          "uitpasNumber": {
            "type": "string"
          },
          "tariffId": {
            "type": "string"
          },
          "eventId": {
            "type": "string"
          },
          "regularPrice": {
            "type": "number"
          },
          "regularPriceLabel": {
            "type": "string",
            "description": "Optional descriptive label of the regular price. Used in financial reporting."
          }
        },
        "required": [
          "uitpasNumber",
          "tariffId",
          "eventId",
          "regularPrice"
        ],
        "x-internal": false,
        "x-tags": [
          "Model"
        ]
      },
      "Error": {
        "title": "Error",
        "type": "object",
        "description": "RFC7807 error model for all publiq APIs",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "number"
          }
        },
        "required": [
          "type",
          "title",
          "status"
        ],
        "x-tags": [
          "Model"
        ]
      },
      "OrganizerRole": {
        "title": "OrganizerRole",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "member",
              "admin"
            ]
          },
          "organizer": {
            "$ref": "#/components/schemas/Organizer"
          }
        },
        "required": [
          "type",
          "organizer"
        ],
        "x-tags": [
          "Model"
        ]
      },
      "Organizer": {
        "title": "Organizer",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "x-tags": [
          "Model"
        ]
      },
      "DistributionKey": {
        "title": "DistributionKey",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "x-tags": [
          "Model"
        ]
      },
      "PaginatedResponse": {
        "title": "PaginatedResponse",
        "type": "object",
        "x-tags": [
          "Model"
        ],
        "properties": {
          "itemsPerPage": {
            "type": "number"
          },
          "totalItems": {
            "type": "number"
          },
          "members": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Organizer"
                },
                {
                  "$ref": "#/components/schemas/Passholder"
                }
              ]
            }
          }
        }
      },
      "Passholder": {
        "title": "Passholder",
        "type": "object",
        "x-tags": [
          "Model"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "inszNumber": {
            "type": "string"
          },
          "cardSsytemMemberships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardSystemMembership"
            }
          },
          "schoolId": {
            "type": "string"
          }
        }
      },
      "CardSystemMembership": {
        "title": "CardSystemMembership",
        "type": "object",
        "x-tags": [
          "Model"
        ],
        "properties": {
          "cardSsytem": {
            "$ref": "#/components/schemas/CardSystem"
          },
          "uitpasNumber": {
            "type": "string"
          },
          "kansenStatuutEndDate": {
            "type": "string"
          },
          "kansenStatuutExpired": {
            "type": "boolean"
          },
          "kansenStatuutInGracePeriod": {
            "type": "boolean"
          }
        }
      },
      "CardSystem": {
        "title": "CardSystem",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "x-tags": [
          "Model"
        ]
      },
      "PassholderUpdateRequest": {
        "title": "PassholderUpdateRequest",
        "type": "object",
        "description": "Request object to update a passholder",
        "properties": {
          "schoolId": {
            "type": "string"
          }
        },
        "x-tags": [
          "Model"
        ]
      },
      "ReportStatus": {
        "type": "object",
        "title": "ReportStatus",
        "description": "The status of a started report export.",
        "x-examples": {},
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "started",
              "available"
            ]
          },
          "reportId": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "reportId"
        ],
        "x-tags": [
          "Model"
        ]
      },
      "ReportPeriod": {
        "title": "ReportPeriod",
        "type": "object",
        "description": "Start and end date of the reporting period  ",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          }
        },
        "required": [
          "startDate",
          "endDate"
        ],
        "x-tags": [
          "Model"
        ]
      }
    },
    "securitySchemes": {
      "Client Access Token (see Authentication docs)": {
        "type": "http",
        "scheme": "bearer"
      },
      "User Acces Token (see Authentication docs)": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "parameters": {},
    "responses": {
      "Unauthorized": {
        "description": "Unauthorized. Your request is missing the required credentials to authenticate. See the Authentication documentation for more info.",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Unauthorized": {
                "value": {
                  "type": "https://api.publiq.be/probs/auth/unauthorized",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden. Your request was successfully authenticated but you do not have permission to perform this particular request.",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Forbidden": {
                "value": {
                  "type": "https://api.publiq.be/probs/auth/forbidden",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    }
  }
}